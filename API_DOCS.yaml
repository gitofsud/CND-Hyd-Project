openapi: "3.0.0"
info:
  version: 1.0.0
  title: Expense Manager
  description: The API documentation for performing various operations on Expense
  termsOfService: http://expensely.io/terms
  contact:
    name: Expensely API Team
    email: apiteam@expensely.io
    url: http://expensely.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://expensely.io/api
paths:
  /expense:
    get:
      description: |
        Returns all expense from the system that the user has access to
        Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.

        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
      operationId: findExpense
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Expense response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new expense in the application. Duplicates are allowed
      operationId: addExpense
      requestBody:
        description: Expense to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewExpense'
      responses:
        '200':
          description: expense response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /expense/{id}:
    get:
      description: Returns a expense based on a single ID
      operationId: find expense by id
      parameters:
        - name: id
          in: path
          description: ID of expense to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: expense response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a single expense based on the ID supplied
      operationId: deleteExpense
      parameters:
        - name: id
          in: path
          description: ID of expense to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: expense deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Expense:
      allOf:
        - $ref: '#/components/schemas/NewExpense'
        - type: object
          required:
          - id
          properties:
            id:
              type: integer
              format: int64

    NewExpense:
      type: object
      required:
        - name
        - amount 
      properties:
        userId:
          type: integer
          format: int64
        amount:
          type: integer
          format: int32
        name:
          type: string
        tag:
          type: string
        createdAt:
          type: string    

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string